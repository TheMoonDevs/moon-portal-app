name: Manual Actions

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (cleanup, delete_lock)'
        required: true
      pr_number:
        description: 'PR number for cleanup (required for cleanup)'
        required: false

permissions:
  contents: write
  pull-requests: write

jobs:
  cleanup:
    if: github.event.inputs.action == 'cleanup'
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Remove Preview Deployment
        run: |
          ssh -o StrictHostKeyChecking=no techteam@${{ secrets.DROPLET_IP }} <<EOF
            echo "Starting cleanup for PR #${{ github.event.inputs.pr_number }}..."
            pm2 delete payzone-pr-${{ github.event.inputs.pr_number }} || true
            pm2 delete portal-pr-${{ github.event.inputs.pr_number }} || true
            echo "Cleanup completed for PR #${{ github.event.inputs.pr_number }}."
          EOF

  delete_lock:
    if: github.event.inputs.action == 'delete_lock'
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Remove Deploy Lock File
        run: |
          ssh -o StrictHostKeyChecking=no techteam@${{ secrets.DROPLET_IP }} <<EOF
            LOCK_FILE="/tmp/deploy/deploy-lock"

            echo "Checking if deploy lock file exists..."
            # Check if the lock file exists before removing
            if [ -f "$LOCK_FILE" ]; then
              echo "Removing deploy lock file..."
              rm -f "$LOCK_FILE"
              echo "Deploy lock file removed."
            else
              echo "No deploy lock file found."
            fi
          EOF
